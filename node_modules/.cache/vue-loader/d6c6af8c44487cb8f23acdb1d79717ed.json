{"remainingRequest":"/Users/phearunum/Desktop/vue-admin-template-master/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/phearunum/Desktop/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/phearunum/Desktop/vue-admin-template-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/phearunum/Desktop/vue-admin-template-master/src/layout/components/AppBar.vue?vue&type=template&id=58fac8c2&","dependencies":[{"path":"/Users/phearunum/Desktop/vue-admin-template-master/src/layout/components/AppBar.vue","mtime":1635310441000},{"path":"/Users/phearunum/Desktop/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":1665739790060},{"path":"/Users/phearunum/Desktop/vue-admin-template-master/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1665739793267},{"path":"/Users/phearunum/Desktop/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":1665739790060},{"path":"/Users/phearunum/Desktop/vue-admin-template-master/node_modules/vue-loader/lib/index.js","mtime":1665739793259}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}